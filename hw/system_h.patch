--- prof/system.h	2017-03-31 17:37:31.736871056 -0400
+++ wp1/system.h	2017-03-31 17:59:54.825757089 -0400
@@ -5,6 +5,7 @@
 #include <list>
 #include <queue>
 #include <utility>
+#include <bitset>
 #include "DRAMSim2/DRAMSim.h"
 #include "Vtop.h"
 
@@ -12,6 +13,10 @@
 #define MEGA (1024UL*1024)
 #define GIGA (1024UL*1024*1024)
 
+#define PAGE_SIZE 	(4096UL)
+#define VALID_PAGE_DIR 	(0b0000000011)
+#define VALID_PAGE 	(0b0000000001)
+
 typedef unsigned long __uint64_t;
 typedef __uint64_t uint64_t;
 typedef unsigned int __uint32_t;
@@ -30,7 +35,9 @@
 
     char* ram;
     unsigned int ramsize;
+    uint64_t ptbr;
     uint64_t max_elf_addr;
+    bitset<GIGA/PAGE_SIZE> memmap;
 
     enum { IRQ_TIMER=0, IRQ_KBD=1 };
     int interrupts;
@@ -47,6 +54,15 @@
 
     void dram_read_complete(unsigned id, uint64_t address, uint64_t clock_cycle);
     void dram_write_complete(unsigned id, uint64_t address, uint64_t clock_cycle);
+    uint64_t get_random_page();
+    void init_page_table(uint64_t table_addr);
+    uint64_t get_new_pte(uint64_t base_addr, int vpn, bool isleaf);
+    uint64_t get_old_pte(uint64_t base_addr, int vpn);
+    uint64_t virt_to_new_phy(uint64_t virt_addr);
+    uint64_t virt_to_old_phy(uint64_t virt_addr);
+    void load_segment(int fileDescriptor, size_t header_size, uint64_t start_addr);
+    uint64_t load_elf_parts(int fileDescriptor, size_t size, uint64_t virt_addr);
+
     DRAMSim::MultiChannelMemorySystem* dramsim;
     
 public:
