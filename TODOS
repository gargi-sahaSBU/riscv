Date:23-04
Add three signals for mm in bus_controller
Check alu_ready
Change the wb_ready to only depend on rd_update_bool
Send opcode till writeback so that it knows about ecall
Think about Display Regs and termination
Send ecall stall to all stage

End
Caches:

	On Reset:
		set Flags wait for mem write/read to Zero
		Set all valid bits to invalid
		Set read_data to None
	On Cache Miss:
		Think what difference in clock cycle between two situations:
		1. Data is Hit
		2. Data is available after Data Miss
		3. Do we need to save previous state somewhere?(check line no 127). If on cache miss/stalling, we are letting the previous stage complete then we will have to save it otherwise the inputs will change.
		previous stage, 


All States:
	1. Think about the reset in all the modules
	2. Think again about the stalls and enable signal in all the modules
		a. during data and instruction cache miss
		b. test data hazard specially ALU -> MM
	3. Implement branches in alu and test nops logic(control hazard)
	4. Implement FLUSH pipeline and think about how to preserve the PC value
	(Increment a separately kept PC value only when instruction writebacks)

Handle memory instructions like lb, lw

add a switch case to not have TLB
